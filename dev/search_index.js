var documenterSearchIndex = {"docs":
[{"location":"api/#Stochastic-Dominance-API","page":"API Reference","title":"Stochastic Dominance API","text":"","category":"section"},{"location":"api/#Main-functions","page":"API Reference","title":"Main functions","text":"","category":"section"},{"location":"api/#StochasticDominance.optimize_max_return_SD","page":"API Reference","title":"StochasticDominance.optimize_max_return_SD","text":"optimize_max_return_SD(ξ, ξ_0,SDorder;p_ξ, p_ξ_0,plot=false,verbose=false, ε=1e-5,  max_ipot=50, max_iter=50, n_particles=50)\n\nSolve a portfolio optimization problem under stochastic dominance constraints to maximize the expected return.\n\nArguments\n\nξ::AbstractMatrix{<:Number}: Portfolio return scenarios.\nξ_0::AbstractVector{<:Number}: Benchmark return scenarios.\nSDorder::Number}: Order of stochastic dominance.\np_ξ::AbstractVector{<:Number}: Probability distribution over portfolio scenarios.\np_ξ_0::AbstractVector{<:Number}: Probability distribution over benchmark scenarios.\nplot::Bool (optional, default = false): Plot the optimal asset allocation.\nverbose::Bool (optional, default = false): Print convergence details.\nε::Float64 (optional, default = 1e-7): Convergence tolerance.\nmax_ipot::Integer (optional, default = 50): Maximum number of attempts to push the objective towards maximization. (Interior point optimization)\nmax_iter::Integer (optional, default = 50): Maximum iterations for optimization.\nn_particles::Integer (optional, default = 200): Number of particles for PSO.\n\nReturns\n\nA tuple (x_opt, t_opt), where:\nx_opt: Optimized portfolio weights.\nt_opt: Auxiliary optimization variable.\n\nExamples\n\n# Define portfolio return scenarios (rows: assets, columns: scenarios)\nξ = [0.02  0.05 -0.01;  # Asset 1 returns under different scenarios\n     0.03  0.06  0.02]   # Asset 2 returns under different scenarios\n\n# Define benchmark return scenarios (column vector)\nξ_0 = [0.01, 0.04, 0.00]  # Benchmark returns in the same scenarios\n\n# Define probability distributions for portfolio and benchmark scenarios\np_ξ = [0.3, 0.4, 0.3]     # Probabilities for each scenario\np_ξ_0 = [0.4, 0.4, 0.2]   # Probabilities for benchmark scenarios\n\n# Set the order of stochastic dominance\nSDorder = 2.0  # Second-order stochastic dominance\n\n\nx_opt, t_opt = optimize_max_return_SD(ξ, ξ_0,SDorder;p_ξ, p_ξ_0,ε=1e-6,verbose=true)\n\nSolves the portfolio optimization problem under stochastic dominance constraints.\n\n\n\n\n\n","category":"function"},{"location":"api/#StochasticDominance.optimize_min_riskreturn_SD","page":"API Reference","title":"StochasticDominance.optimize_min_riskreturn_SD","text":"optimize_min_riskreturn_SD(ξ, ξ_0,SDorder; β=0.5,r=2.0,p_ξ, p_ξ_0, ε=1e-5, plot=false, verbose=false, max_ipot=50, max_iter=50, n_particles=50)\n\nSolve a portfolio optimization problem under stochastic dominance risk constraints\n\nArguments\n\nξ::AbstractMatrix{<:Number}: Portfolio return scenarios.\nξ_0::AbstractVector{<:Number}: Benchmark return scenarios.\nSDorder::S: Order of stochastic dominance.\nr::Number (optional, default = 2.0): norm of risk measure.\nβ::Number (optional, default = 0.5): Confidence level for risk measure.\np_ξ::AbstractVector{<:Number}: Probability distribution over portfolio scenarios.\np_ξ_0::AbstractVector{<:Number}: Probability distribution over benchmark scenarios.\nε::Float64 (optional, default = 1e-7): Convergence tolerance.\nplot::Bool (optional, default = false): Plot the optimal asset allocation.\nverbose::Bool (optional, default = false): Print convergence details.\nmax_ipot::Integer (optional, default = 50): Maximum number of attempts to push the objective towards maximization. (Interior point optimization)\nmax_iter::Integer (optional, default = 50): Maximum iterations for optimization.\nn_particles::Integer (optional, default = 200): Number of particles for PSO.\n\nReturns\n\nA tuple (x_opt, q_opt, t_opt), where:\nx_opt: Optimized portfolio weights.\nq_opt: Optimized risk threshold parameter.\nt_opt: Auxiliary optimization variable.\n\nExamples\n\n# Define portfolio return scenarios (rows: assets, columns: scenarios)\nξ = [0.02  0.05 -0.01;  # Asset 1 returns under different scenarios\n     0.03  0.06  0.02]   # Asset 2 returns under different scenarios\n\n# Define benchmark return scenarios (column vector)\nξ_0 = [0.01, 0.04, 0.00]  # Benchmark returns in the same scenarios\n\n# Define probability distributions for portfolio and benchmark scenarios\np_ξ = [0.3, 0.4, 0.3]     # Probabilities for each scenario\np_ξ_0 = [0.4, 0.4, 0.2]   # Probabilities for benchmark scenarios\n\n# Set the order of stochastic dominance\nSDorder = 2  # Second-order stochastic dominance\n\n# Set the risk parameter\nβ=0.5\n\n# Set the norm of the risk measure\nr=2.0\n\nx_opt, q_opt,t_opt= optimize_min_riskreturn_SD(ξ, ξ_0,SDorder;p_ξ, p_ξ_0,β,r,ε=1e-6,verbose=true,plot=true)\n\nSolves the portfolio optimization problem under stochastic dominance constraints.\n\n\n\n\n\n","category":"function"},{"location":"api/#StochasticDominance.verify_dominance","page":"API Reference","title":"StochasticDominance.verify_dominance","text":"verify_dominance(Y, X,SDorder; p_X, p_Y,ε=1e-5,verbose=false)\n\nVerify if Y stochastically dominates X at a given stochastic oder \n\nArguments\n\nY::AbstractVector{<:Number}: Portfolio outcomes (returns).\nX::AbstractVector{<:Number}: Benchmark outcomes.\np_X::AbstractVector{<:Number}: Probabilities associated with X.\np_Y::AbstractVector{<:Number}: Probabilities associated with Y.\nSDorder::Integer: Order of stochastic dominance (SD).\n\nKeyword Arguments\n\nε::Float64=1e-5: Convergence tolerance for the dominance check.\nverbose::Bool=false: If true, print detailed accuracy or residuals.\n\nReturns\n\nA message indicating whether Y stochastically dominates X at order SDorder.\ntrue if Y stochastically dominates X at the given order.\nfalse otherwise.\n\nExamples\n\nY = [3, 5, 7]\nX = [2, 4, 6]\np_Y = [0.3, 0.4, 0.3]\np_X = [0.2, 0.5, 0.3]\nSDorder = 2\n\nverify_dominance(Y, X, SDorder; p_X, p_Y, ε=1e-8,verbose=true)\n\n\n\n\n\n","category":"function"},{"location":"api/#StochasticDominance.optimize_min_risk","page":"API Reference","title":"StochasticDominance.optimize_min_risk","text":"optimize_min_risk(ξ_0::AbstractVector{T}, p_ξ_0::AbstractVector{T}; \n    β::T=0.5, r::T=2, ε::Float64=1e-7, max_iter::Integer=50, \n    n_particles::Integer=100, max_ipot::Integer=50) where {T<:Number}\n\nPerforms risk minimization using Particle Swarm Optimization (PSO) to find the optimal risk threshold parameter q.\n\nArguments\n\nξ_0::AbstractVector{<:Number}: Benchmark return scenarios.\np_ξ_0::AbstractVector{<:Number}: Probability distribution over benchmark scenarios.\n\nKeyword Arguments\n\nβ::Number = 0.5: Confidence level for risk measure.\nr::Number = 2.0: Norm of the risk measure.\nε::Float64 = 1e-7: Convergence tolerance.\nmax_iter::Integer = 50: Maximum number of iterations for optimization.\nn_particles::Integer = 100: Number of particles for PSO.\nmax_ipot::Integer = 50: Maximum number of attempts for interior point optimization.\n\nReturns\n\nq_opt_best::Float64: The optimized risk threshold parameter.\n\nExample\n\n# Define benchmark return scenarios\nξ_0 = [0.01, 0.04, 0.00]  # Benchmark returns in different scenarios\n\n# Define probability distribution for benchmark scenarios\np_ξ_0 = [0.4, 0.4, 0.2]   # Probabilities for benchmark scenarios\n\n# Set risk parameters\nβ = 0.5\nr = 2.0\n\n# Solve the risk minimization problem\nq_opt_best = optimize_min_risk(ξ_0, p_ξ_0; β=β, r=r, ε=1e-6, max_iter=100)\n\n\n\n\n\n","category":"function"},{"location":"api/#Auxiliary-functions","page":"API Reference","title":"Auxiliary functions","text":"","category":"section"},{"location":"api/#StochasticDominance.AuxiliaryFunc.g_bar","page":"API Reference","title":"StochasticDominance.AuxiliaryFunc.g_bar","text":"g_bar(x, ξ, ξ_0, p, p_ξ, p_ξ_0)\n\nCompute the verification of the higher-order stochastic dominance constraint by evaluating g_p over sorted benchmark values.\n\nArguments\n\nx::AbstractVector{<:Number}: Portfolio weights (simplex).\nξ::AbstractVector{<:Number}: Portfolio returns.\nξ_0::AbstractVector{<:Number}: Benchmark returns.\np::Number: The order-1 of stochastic dominance.\np_ξ::AbstractVector{<:Number}: Probability of portfolio ξ.\np_ξ_0::AbstractVector{<:Number}: Probability of benchmark ξ_0.\n\nReturns\n\nA numeric value computed as max(max_value, 0.0), where:\nmax_value is the maximum of g_p(t, x, ξ, ξ_0, p, p_ξ, p_ξ_0) over sorted ξ_0.\nIf max_value is negative, the function returns 0.0.\nIf max_value is positive, the selected portfolio or the portfolio with assigned weights does not satisfy the dominance condition.\"\n\nExamples\n\ng_bar([0.7, 0.3], [2  3; 5 6], [2,3,4], 3, [0.5,0.5], [0.2,0.3,0.5])  \n\n\n\n\n\n","category":"function"},{"location":"api/#StochasticDominance.AuxiliaryFunc.boundary_moments","page":"API Reference","title":"StochasticDominance.AuxiliaryFunc.boundary_moments","text":"boundarymoments(x, ξ, pξ, pξ0, ξ_0, p)\n\nCompute the boundary moments for higher-order stochastic dominance constraints by comparing  the moments of the portfolio and benchmark distributions.\n\nArguments\n\nx::AbstractVector{<:Number}: Portfolio weights (simplex constraint).\nξ::AbstractMatrix{<:Number}: Portfolio returns.\np_ξ::AbstractVector{<:Number}: Probability distribution of the portfolio returns ξ.\np_ξ_0::AbstractVector{<:Number}: Probability distribution of the benchmark returns ξ_0.\nξ_0::AbstractVector{<:Number}: Benchmark returns.\np::Real: The highest moment order. If p is an integer, boundary_moments_integer is used. If p is non-integer, boundary_moments_noninteger is used.\n\nReturns\n\nA vector containing computed moment constraints:\nFor k = 1: Compares the mean of the portfolio and benchmark.\nFor k ≥ 2: Computes and compares the central moments.\nIf the portfolio moment does not exceed the benchmark moment, the value is set to zero.\nOtherwise, the result stores the norm of the difference.\n\nMethodology\n\nInteger Case (p is an integer):\nComputes moments from order 1 order p.\nUses the function boundary_moments_integer.\nNon-Integer Case (p is a non-integer):\nComputes moments from order (0,1) order p\nUses the function boundary_moments_noninteger.\n\nExamples\n\n# Example 1: Integer order moments\nboundary_moments([0.7, 0.3], [2 3; 5 6], [0.5, 0.5], [0.2, 0.3, 0.5], [2, 3, 4], 3)\n\n# Example 2: Non-integer order moments\nboundary_moments([0.7, 0.3], [2 3; 5 6], [0.5, 0.5], [0.2, 0.3, 0.5], [2, 3, 4], 2.7)\n\n\n\n\n\n","category":"function"},{"location":"api/#StochasticDominance.AuxiliaryFunc.expected_portfolio_return","page":"API Reference","title":"StochasticDominance.AuxiliaryFunc.expected_portfolio_return","text":"expected_portfolio_return(x, ξ, p_ξ)\n\nCompute the expected return of a portfolio given asset returns and probabilities.\n\nArguments\n\nx::AbstractVector{<:Number}: Portfolio weights (simplex).\nξ::AbstractMatrix{<:Number}: Matrix of asset returns (each column represents a scenario).\np_ξ::AbstractVector{<:Number}: Probability distribution over the scenarios.\n\nReturns\n\nA numeric value representing the expected portfolio return \n\nExamples\n\nexpected_portfolio_return([0.7, 0.3], [2  3; 5 6], [0.5,0.5])  \n# Computes the expected portfolio return.\n\n\n\n\n\n","category":"function"},{"location":"api/#StochasticDominance.AuxiliaryFunc.riskfunction_asset_allocation","page":"API Reference","title":"StochasticDominance.AuxiliaryFunc.riskfunction_asset_allocation","text":"riskfunction_asset_allocation(x, q, ξ, r, p_ξ, β)\n\nCalculates the risk-adjusted portfolio return based on quantile-based risk measures.\n\nArguments\n\nx: Portfolio weights (decision variables to optimize).\nq: Quantile threshold for the risk measure.\nξ: Portfolio scenarios (matrix of asset returns).\nr: Norm parameter.\np_ξ: Probability weights for the scenarios in ξ.\nβ: Risk aversion parameter (closer to 1 indicates higher aversion).\n\nReturns\n\nThe risk-adjusted return, which accounts for portfolio performance and risk under extreme loss scenarios.\n\n\n\n\n\n","category":"function"},{"location":"tutorial/tutorial3/#Optimization:-Maximizing-Expected-Returns","page":"Optimization: Maximizing Expected Returns","title":"Optimization: Maximizing Expected Returns","text":"","category":"section"},{"location":"tutorial/tutorial3/","page":"Optimization: Maximizing Expected Returns","title":"Optimization: Maximizing Expected Returns","text":"This tutorial demonstrates how to use the optimize_max_return_SD function to find the optimal portfolio allocation x. This function ensures that the weighted portfolio assets x^topxi dominate the benchmark xi_0 while maximizing mathbbE x^top xi.","category":"page"},{"location":"tutorial/tutorial3/#Mathematical-Framework","page":"Optimization: Maximizing Expected Returns","title":"Mathematical Framework","text":"","category":"section"},{"location":"tutorial/tutorial3/","page":"Optimization: Maximizing Expected Returns","title":"Optimization: Maximizing Expected Returns","text":"This problem arises in portfolio optimization. Define the simplex:","category":"page"},{"location":"tutorial/tutorial3/","page":"Optimization: Maximizing Expected Returns","title":"Optimization: Maximizing Expected Returns","text":"mathcalS coloneqq left(x_1 dots x_d) mid x_i geq 0 text for  i=1 dots d text and  sum_i=1^d x_i = 1 right","category":"page"},{"location":"tutorial/tutorial3/","page":"Optimization: Maximizing Expected Returns","title":"Optimization: Maximizing Expected Returns","text":"The non-linear optimization problem can be rewritten as:","category":"page"},{"location":"tutorial/tutorial3/","page":"Optimization: Maximizing Expected Returns","title":"Optimization: Maximizing Expected Returns","text":"beginaligned\n   max_x inmathcalS     quad mathbbE x^top xi \n    textsubject to   quad xi_0 preccurlyeq^(p) x^top xi \n                         quad x in mathcalS\nendaligned","category":"page"},{"location":"tutorial/tutorial3/","page":"Optimization: Maximizing Expected Returns","title":"Optimization: Maximizing Expected Returns","text":"Here, xi_0 in mathbbR^n represents the return of a benchmark portfolio, while xi in mathbbR^d times n denotes the assets returns. The formulation considers d assets and n scenarios.","category":"page"},{"location":"tutorial/tutorial3/#Example-1","page":"Optimization: Maximizing Expected Returns","title":"Example 1","text":"","category":"section"},{"location":"tutorial/tutorial3/","page":"Optimization: Maximizing Expected Returns","title":"Optimization: Maximizing Expected Returns","text":"In the first example, we illustrate the function optimize_max_return_SD using representative data.","category":"page"},{"location":"tutorial/tutorial3/","page":"Optimization: Maximizing Expected Returns","title":"Optimization: Maximizing Expected Returns","text":"# Define portfolio return scenarios (rows: assets, columns: scenarios)\nξ = [0.02  0.05 -0.01;  # Asset 1 returns under different scenarios\n     0.03  0.06  0.02]   # Asset 2 returns under different scenarios\n\n# Define benchmark return scenarios (column vector)\nξ_0 = [0.01, 0.04, 0.00]  # Benchmark returns in the same scenarios\n\n# Define probability distributions for portfolio and benchmark scenarios\np_ξ = [0.3, 0.4, 0.3]     # Probabilities for each scenario\np_ξ_0 = [0.4, 0.4, 0.2]   # Probabilities for benchmark scenarios\n\n# Set the order of stochastic dominance\nSDorder = 2  # Second-order stochastic dominance\n\nx_opt, t_opt = optimize_max_return_SD(ξ, ξ_0,SDorder;p_ξ, p_ξ_0,ε=1e-6,verbose=true)","category":"page"},{"location":"tutorial/tutorial3/#Output","page":"Optimization: Maximizing Expected Returns","title":"Output","text":"","category":"section"},{"location":"tutorial/tutorial3/","page":"Optimization: Maximizing Expected Returns","title":"Optimization: Maximizing Expected Returns","text":"Simplex Constraints residuals: 4.0992834682285206e-7\nStochastic Dominance Constraints residuals: 0.0","category":"page"},{"location":"tutorial/tutorial3/","page":"Optimization: Maximizing Expected Returns","title":"Optimization: Maximizing Expected Returns","text":"println(\"Optimal asset allocation x: \",x_opt)\nOptimal asset allocation x:[0.002684844820915079, 0.997314745250738]\nprintln(\"Optimal Objective:\",expected_portfolio_return(x_opt,ξ,p_ξ))\nOptimal Objective: 0.03895702649565983","category":"page"},{"location":"tutorial/tutorial3/","page":"Optimization: Maximizing Expected Returns","title":"Optimization: Maximizing Expected Returns","text":"In general, the output provides the optimal asset allocation vector x of length $ d $ and a single optimal t that confirms the stochastic dominance of the given order. For more technical details on reducing the verification of infinitely many t (i.e., t in mathbbR) to a single value, refer to Lakshmanan et al. 2025. ","category":"page"},{"location":"tutorial/tutorial3/#Example-2","page":"Optimization: Maximizing Expected Returns","title":"Example 2","text":"","category":"section"},{"location":"tutorial/tutorial3/","page":"Optimization: Maximizing Expected Returns","title":"Optimization: Maximizing Expected Returns","text":"For this example, we consider the standardized dataset from Fama and French 2023. ","category":"page"},{"location":"tutorial/tutorial3/","page":"Optimization: Maximizing Expected Returns","title":"Optimization: Maximizing Expected Returns","text":"using DataFrames\nusing Dates\ndata = DataFrame(\n    Date = Date.([Date(\"2024-07-01\"), Date(\"2024-07-02\"), Date(\"2024-07-03\"), Date(\"2024-07-05\"), Date(\"2024-07-08\"), Date(\"2024-07-09\"), Date(\"2024-07-10\"), Date(\"2024-07-11\"), Date(\"2024-07-12\"), Date(\"2024-07-15\"), Date(\"2024-07-16\"), Date(\"2024-07-17\"), Date(\"2024-07-18\"), Date(\"2024-07-19\"), Date(\"2024-07-22\"), Date(\"2024-07-23\"), Date(\"2024-07-24\"), Date(\"2024-07-25\"), Date(\"2024-07-26\"), Date(\"2024-07-29\"), Date(\"2024-07-30\"), Date(\"2024-07-31\")]),\n    Asset_1 = [-1.01, -2.50, -0.38, -1.11, 0.44, 0.05, -0.34, 4.00, 1.76, 1.53, 2.77, 0.71, -2.24, 0.08, 0.35, 2.55, -2.21, 1.67, 0.17, -0.97, -0.11, 0.24],\n    Asset_2 = [-0.72, -0.22, 0.27, 0.15, -0.22, -1.49, 0.79, 1.60, 1.04, 0.02, 1.28, 0.69, -1.24, -1.51, 0.29, -0.09, 2.88, -0.21, 1.26, -0.79, 0.79, 1.89],\n    Asset_3 = [1.10, -0.86, -0.21, -0.33, -0.64, 1.52, 1.31, 2.53, -0.06, -3.42, 2.59, -1.44, -1.74, -0.23, -0.54, 0.08, -1.61, 1.05, 2.29, -0.48, 0.98, 0.72],\n    Asset_4 = [-1.80, -0.09, 0.41, 2.10, 0.59, -2.59, 2.75, 0.73, 0.41, -2.50, 0.40, 1.12, -1.72, -2.67, -0.42, -0.39, -2.51, 0.00, 0.93, -0.48, -1.65, -1.14],\n    Asset_5 = [-0.65, 0.64, 0.41, -1.61, 0.33, -0.26, 1.93, 3.72, 2.17, -0.63, 1.83, 0.94, -1.78, -1.81, -0.25, 1.14, -0.41, 2.21, 2.13, -1.13, 0.07, -1.23]\n)\nξ =  Matrix(select(data, Not(:Date)))'  # Define Portfolio matrix ξ ∈ R^{d×n} d assets and n scenarios\nd, n = size(ξ) \nτ = fill(1/d,d)  # equally weights\nξ_0 = vec(τ'*ξ) # Define Benchmark  ξ_0 ∈ R^{n}\np_ξ = fill(1/n,n)  # Probability vectors for x'*ξ ∈ R^{n} , where x is portfolio weights \np_ξ_0 = fill(1/n,n) # Probability vectors for ξ_0 ∈ R^{n}","category":"page"},{"location":"tutorial/tutorial3/#Output-2","page":"Optimization: Maximizing Expected Returns","title":"Output","text":"","category":"section"},{"location":"tutorial/tutorial3/","page":"Optimization: Maximizing Expected Returns","title":"Optimization: Maximizing Expected Returns","text":"SDorder = 4.0 # Define SD order\nx_opt, t_opt = optimize_max_return_SD(ξ, ξ_0,SDorder;p_ξ,p_ξ_0,plot=true) # Run the optimization","category":"page"},{"location":"tutorial/tutorial3/","page":"Optimization: Maximizing Expected Returns","title":"Optimization: Maximizing Expected Returns","text":"(Image: Assetallocation)","category":"page"},{"location":"tutorial/tutorial3/#Non-integer-SD-orders","page":"Optimization: Maximizing Expected Returns","title":"Non-integer SD orders","text":"","category":"section"},{"location":"tutorial/tutorial3/","page":"Optimization: Maximizing Expected Returns","title":"Optimization: Maximizing Expected Returns","text":"SDorder = 4.7 \nx_opt, t_opt = optimize_max_return_SD(ξ, ξ_0,SDorder;p_ξ,p_ξ_0,plot=true) # Run the optimization","category":"page"},{"location":"tutorial/tutorial3/","page":"Optimization: Maximizing Expected Returns","title":"Optimization: Maximizing Expected Returns","text":"(Image: Asset2allocation)","category":"page"},{"location":"tutorial/tutorial4/#Optimization:-Minimizing-Higher-Order-Risk-Measures","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"","category":"section"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"This tutorial demonstrates how to use the optimize_min_riskreturn_SD function to find the optimal portfolio allocation x. This function ensures that the weighted portfolio assets x^topxi dominate the benchmark xi_0 while minimizing higher-order risk measures with respect to -x^top xi.","category":"page"},{"location":"tutorial/tutorial4/#Mathematical-Framework","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Mathematical Framework","text":"","category":"section"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"This problem arises in portfolio optimization. Define the simplex","category":"page"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"mathcalS coloneqq left(x_1 dots x_d) mid x_i geq 0 text for  i=1 dots d text and  sum_i=1^d x_i = 1 right","category":"page"},{"location":"tutorial/tutorial4/#Definition-higher-order-coherent-risk-measure","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Definition higher-order coherent risk measure","text":"","category":"section"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"Let beta in (01), r geq 1 and let Y be a random variable. The higher-order risk measure at risk level beta is defined as","category":"page"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"mathcalR_betar(Y) coloneqq min_q in mathbbR   q + frac11 - beta (-Y - q)_+_r","category":"page"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"This measure captures both quantile-based risk assessment and expected excess losses, making it more robust than simpler risk measures like Value-at-Risk (V@R). For intuition, see coherent risk measure ","category":"page"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"Key points","category":"page"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"The higher-order risk measure generalizes Value-at-Risk (V@R) and Conditional Value-at-Risk (CV@R).\nIt combines both quantile-based and expected excess loss measures.\nProvides a more robust risk assessment, especially in heavy-tailed distributions.","category":"page"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"The optimization problem can be rewritten as:","category":"page"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"beginaligned\n   min_x inmathcalS    quad mathcal R_betar( -x^top xi)\n    textsubject to   quad xi_0 preccurlyeq^(p) x^top xi \n                         quad x in mathcalS\nendaligned","category":"page"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"Here, xi_0 in mathbbR^n represents the return of a benchmark portfolio, while xi in mathbbR^d times n denotes the asset returns. The formulation considers d assets and n scenarios. ","category":"page"},{"location":"tutorial/tutorial4/#Example-1","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Example 1","text":"","category":"section"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"In the first example, we illustrate the function optimize_min_riskreturn_SD using representative data.","category":"page"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"# Define portfolio return scenarios (rows: assets, columns: scenarios)\nξ = [0.02  0.05 -0.01;  # Asset 1 returns under different scenarios\n     0.03  0.06  0.02]   # Asset 2 returns under different scenarios\n\n# Define benchmark return scenarios (column vector)\nξ_0 = [0.01, 0.04, 0.00]  # Benchmark returns in the same scenarios\n\n# Define probability distributions for portfolio and benchmark scenarios\np_ξ = [0.3, 0.4, 0.3]     # Probabilities for each scenario\np_ξ_0 = [0.4, 0.4, 0.2]   # Probabilities for benchmark scenarios\n\n# Set the order of stochastic dominance\nSDorder = 2  # Second-order stochastic dominance\n\n# Set the risk parameters\nβ=0.5\nr=2.0\n\nx_opt, q_opt,t_opt = optimize_min_riskreturn_SD(ξ, ξ_0,SDorder;p_ξ, p_ξ_0,β,r,verbose=true)","category":"page"},{"location":"tutorial/tutorial4/#Output","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Output","text":"","category":"section"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"Simplex Constraints residuals: 5.903068123425115e-6\nStochastic Dominance Constraints residuals: 0.0\"\nprintln(\"Optimal asset allocation x: \",x_opt)\nOptimal asset allocation x: [0.004074767447193794, 0.9959311356209297]\nprintln(\"Optimal q: \",q_opt) \nOptimal q: -0.019892461315708196\nprintln(\"Optimal Objective: \", riskfunction_asset_allocation(x_opt, q_opt, ξ, r, p_ξ, β))\nOptimal Objective: -0.019876482848988134","category":"page"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"In general, the output provides the optimal asset allocation vector x of length d, the optimal q for a higher-order risk measure, and a single optimal t that confirms the stochastic dominance of the given order. For more technical details on reducing the verification of infinitely many t (i.e., t in mathbbR) to a single value, refer to Lakshmanan et al. 2025.","category":"page"},{"location":"tutorial/tutorial4/#Example-2","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Example 2","text":"","category":"section"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"For this example, we consider the standardized dataset from Fama and French 2023. ","category":"page"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"using DataFrames\nusing Dates\ndata = DataFrame(\n    Date = Date.([Date(\"2024-07-01\"), Date(\"2024-07-02\"), Date(\"2024-07-03\"), Date(\"2024-07-05\"), Date(\"2024-07-08\"), Date(\"2024-07-09\"), Date(\"2024-07-10\"), Date(\"2024-07-11\"), Date(\"2024-07-12\"), Date(\"2024-07-15\"), Date(\"2024-07-16\"), Date(\"2024-07-17\"), Date(\"2024-07-18\"), Date(\"2024-07-19\"), Date(\"2024-07-22\"), Date(\"2024-07-23\"), Date(\"2024-07-24\"), Date(\"2024-07-25\"), Date(\"2024-07-26\"), Date(\"2024-07-29\"), Date(\"2024-07-30\"), Date(\"2024-07-31\")]),\n    Asset_1 = [-1.01, -2.50, -0.38, -1.11, 0.44, 0.05, -0.34, 4.00, 1.76, 1.53, 2.77, 0.71, -2.24, 0.08, 0.35, 2.55, -2.21, 1.67, 0.17, -0.97, -0.11, 0.24],\n    Asset_2 = [-0.72, -0.22, 0.27, 0.15, -0.22, -1.49, 0.79, 1.60, 1.04, 0.02, 1.28, 0.69, -1.24, -1.51, 0.29, -0.09, 2.88, -0.21, 1.26, -0.79, 0.79, 1.89],\n    Asset_3 = [1.10, -0.86, -0.21, -0.33, -0.64, 1.52, 1.31, 2.53, -0.06, -3.42, 2.59, -1.44, -1.74, -0.23, -0.54, 0.08, -1.61, 1.05, 2.29, -0.48, 0.98, 0.72],\n    Asset_4 = [-1.80, -0.09, 0.41, 2.10, 0.59, -2.59, 2.75, 0.73, 0.41, -2.50, 0.40, 1.12, -1.72, -2.67, -0.42, -0.39, -2.51, 0.00, 0.93, -0.48, -1.65, -1.14],\n    Asset_5 = [-0.65, 0.64, 0.41, -1.61, 0.33, -0.26, 1.93, 3.72, 2.17, -0.63, 1.83, 0.94, -1.78, -1.81, -0.25, 1.14, -0.41, 2.21, 2.13, -1.13, 0.07, -1.23]\n)\nξ =  Matrix(select(data, Not(:Date)))'  # Define Portfolio matrix ξ ∈ R^{d×n} d assets and n scenarios\nd, n = size(ξ) \nτ = fill(1/d,d)  # equally weights\nξ_0 = vec(τ'*ξ) # Define Benchmark  ξ_0 ∈ R^{n}\np_ξ = fill(1/n,n)  # Probability vectors for x'*ξ ∈ R^{n} , where x is portfolio weights \np_ξ_0 = fill(1/n,n) # Probability vectors for ξ_0 ∈ R^{n}\nβ = 0.5 # Risk parameter\nr = 2.0 # norm parameter","category":"page"},{"location":"tutorial/tutorial4/#Run-the-function-optimize_min_riskreturn_SD","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Run the function optimize_min_riskreturn_SD","text":"","category":"section"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"SDorder = 4.0 # Stochastic order\nx_opt, q_opt, t_opt = optimize_min_riskreturn_SD(ξ, ξ_0,SDorder;p_ξ, p_ξ_0,β,r,plot=true) # Run the optimization","category":"page"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"(Image: Assetallocation)","category":"page"},{"location":"tutorial/tutorial4/#Non-integer-SD-orders","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Non-integer SD orders","text":"","category":"section"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"SDorder = 4.7 \nx_opt, q_opt, t_opt = optimize_min_riskreturn_SD(ξ, ξ_0,SDorder;p_ξ, p_ξ_0,β,r,plot=true,max_ipot=100)# Run the optimization","category":"page"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"By default, max_ipot=50, but setting it to 100 allows the algorithm to attempt up to 100 iterations for a better objective function. For details, see the function documentation and interior point optimization.","category":"page"},{"location":"tutorial/tutorial4/","page":"Optimization: Minimizing Higher Order Risk Measures","title":"Optimization: Minimizing Higher Order Risk Measures","text":"(Image: Asset2allocation)","category":"page"},{"location":"tutorial/tutorial1/#Introduction-to-Stochastic-Dominance","page":"Introduction to Stochastic Dominance","title":"Introduction to Stochastic Dominance","text":"","category":"section"},{"location":"tutorial/tutorial1/","page":"Introduction to Stochastic Dominance","title":"Introduction to Stochastic Dominance","text":"Stochastic dominance plays a crucial role in decision-making under uncertainty and quantitative finance. It provides a powerful method for comparing random variables using their distribution functions. This concept establishes a structured framework to evaluate the superiority of one investment, policy, or strategy over another in uncertain environments.","category":"page"},{"location":"tutorial/tutorial1/","page":"Introduction to Stochastic Dominance","title":"Introduction to Stochastic Dominance","text":"By utilizing cumulative distribution functions, stochastic dominance allows decision-makers to assess choices without assuming specific utility functions. This generalization leads to a mathematically rigorous approach to optimization and risk management. The precision and depth of stochastic dominance make it an indispensable tool for analyzing complex probabilistic systems. We refer to stochastic dominance wiki for a quick overview. ","category":"page"},{"location":"tutorial/tutorial1/#Stochastic-Dominance-of-Order-p","page":"Introduction to Stochastic Dominance","title":"Stochastic Dominance of Order p","text":"","category":"section"},{"location":"tutorial/tutorial1/","page":"Introduction to Stochastic Dominance","title":"Introduction to Stochastic Dominance","text":"Let p in 1infty) and let X Y in L^p be random variables. We say that X is dominated by Y in the stochastic order of p, denoted as","category":"page"},{"location":"tutorial/tutorial1/","page":"Introduction to Stochastic Dominance","title":"Introduction to Stochastic Dominance","text":"X preccurlyeq^(p) Y","category":"page"},{"location":"tutorial/tutorial1/","page":"Introduction to Stochastic Dominance","title":"Introduction to Stochastic Dominance","text":"if the condition holds","category":"page"},{"location":"tutorial/tutorial1/","page":"Introduction to Stochastic Dominance","title":"Introduction to Stochastic Dominance","text":"mathbbE (t - X)_+^p-1 geq mathbbE (t - Y)_+^p-1 quad textfor all  t in mathbbR","category":"page"},{"location":"tutorial/tutorial1/","page":"Introduction to Stochastic Dominance","title":"Introduction to Stochastic Dominance","text":"This definition provides a precise way to compare random variables under higher order stochastic dominance criteria. From a portfolio optimization perspective, the feasible random variable Y in the above formulation dominates benchmark variables X. ","category":"page"},{"location":"tutorial/tutorial1/","page":"Introduction to Stochastic Dominance","title":"Introduction to Stochastic Dominance","text":"For other equivalent formulations and technical details, we refer to Dentcheva and Ruszczyński [1].","category":"page"},{"location":"tutorial/tutorial1/#Optimal-Portfolio-Scaling-under-Stochastic-Dominance-of-Order-p","page":"Introduction to Stochastic Dominance","title":"Optimal Portfolio Scaling under Stochastic Dominance of Order p","text":"","category":"section"},{"location":"tutorial/tutorial1/","page":"Introduction to Stochastic Dominance","title":"Introduction to Stochastic Dominance","text":"Given a fixed benchmark random vector xi_0 in mathbbR^n and a portfolio return random vector(s) (d vectors) xi in mathbbR^d times n, we aim to determine an optimal scaling factor x  0 (d dimensional simplex vector) such that the scaled portfolio x^topxi dominates xi_0 under stochastic dominance of order of p. Here, we have d assets and n scenarios.","category":"page"},{"location":"tutorial/tutorial1/#Goal:","page":"Introduction to Stochastic Dominance","title":"Goal:","text":"","category":"section"},{"location":"tutorial/tutorial1/","page":"Introduction to Stochastic Dominance","title":"Introduction to Stochastic Dominance","text":"Find x  0 such that:","category":"page"},{"location":"tutorial/tutorial1/","page":"Introduction to Stochastic Dominance","title":"Introduction to Stochastic Dominance","text":"xi_0 preccurlyeq^(p) x^topxi quad textor quad mathbbE(t - xi_0)_+^p-1 geq mathbbE(t - x^topxi )_+^p-1 quad forall t in mathbbR","category":"page"},{"location":"tutorial/tutorial1/#Optimization-Variants:","page":"Introduction to Stochastic Dominance","title":"Optimization Variants:","text":"","category":"section"},{"location":"tutorial/tutorial1/","page":"Introduction to Stochastic Dominance","title":"Introduction to Stochastic Dominance","text":"Maximize Expected Return under Dominance Constraint:\nmax_x  0 mathbbE x^topxi quad textsubject to quad xi_0 preccurlyeq^(p) x^topxi\nMinimize Risk (e.g., Variance) under Dominance Constraint:\nmin_x  0 textVar(x^topxi) quad textsubject to quad xi_0 preccurlyeq^(p) x^topxi","category":"page"},{"location":"tutorial/tutorial1/#Interpretation:","page":"Introduction to Stochastic Dominance","title":"Interpretation:","text":"","category":"section"},{"location":"tutorial/tutorial1/","page":"Introduction to Stochastic Dominance","title":"Introduction to Stochastic Dominance","text":"The condition xi_0 preccurlyeq^(p) x^topxi ensures that for all thresholds t, the p^textth  partial moment of xi_0 is at least that of the scaled portfolio x^topxi.\nThis allows the investor to scale the portfolio to either increase returns or reduce risk while maintaining or improving the performance relative to the benchmark under higher-order stochastic dominance.","category":"page"},{"location":"tutorial/tutorial1/#Practical-Use:","page":"Introduction to Stochastic Dominance","title":"Practical Use:","text":"","category":"section"},{"location":"tutorial/tutorial1/","page":"Introduction to Stochastic Dominance","title":"Introduction to Stochastic Dominance","text":"This approach is especially useful in portfolio optimization where a benchmark (e.g., market index) is fixed, and the investor seeks to optimally scale their portfolio to satisfy risk-return tradeoffs under rigorous dominance conditions.","category":"page"},{"location":"tutorial/tutorial1/","page":"Introduction to Stochastic Dominance","title":"Introduction to Stochastic Dominance","text":"This package provides tools to analyze stochastic dominance, enabling users to apply these concepts effectively in decision-making and financial optimization. The mathematical background of this package was discussed in Lakshmanan et al. [2].","category":"page"},{"location":"tutorial/tutorial1/#References","page":"Introduction to Stochastic Dominance","title":"References","text":"","category":"section"},{"location":"tutorial/tutorial1/","page":"Introduction to Stochastic Dominance","title":"Introduction to Stochastic Dominance","text":"D. Dentcheva and A. Ruszczyński. Risk-Averse Optimization and Control: Theory and Methods (Springer Nature, 2024).\n\n\n\nR. Lakshmanan, A. Pichler and M. Kopa. Higher-Order Stochastic Dominance Constraints in Optimization, arXiv preprint arXiv:2501.14565 (2025).\n\n\n\nD. Dentcheva and A. Ruszczyński. Optimization with stochastic dominance constraints. SIAM Journal on Optimization 14, 548–566 (2003).\n\n\n\nT. Post and M. Kopa. Portfolio Choice Based on Third-Degree Stochastic Dominance. Management Science 63, 3381–3392 (2017).\n\n\n\nA. Pichler. Connection between higher order measures of risk and stochastic dominance. Computational Management Science 21, 41 (2024).\n\n\n\n","category":"page"},{"location":"#StochasticDominance.jl","page":"Home","title":"StochasticDominance.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"We present the StochasticDominance.jl package, which provides tools for analyzing higher order stochastic dominance—a method used to establish a partial order between random variables.","category":"page"},{"location":"#Brief-overview-of-stochastic-dominance","page":"Home","title":"Brief overview of stochastic dominance","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Stochastic dominance is a concept used to compare decision alternatives based on their cumulative risk profiles, ensuring that one alternative is preferred over another without any trade-offs across values. In the context of portfolio optimization, given a benchmark asset and a portfolio of assets, we seek an optimal allocation that maximizes a chosen objective (e.g., maximizing returns) while satisfying (higher-order) stochastic dominance constraints. ","category":"page"},{"location":"#Main-features-of-the-package","page":"Home","title":"Main features of the package","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The StochasticDominance.jl package provides tools to:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Verify higher-order stochastic dominance – Check whether a given portfolio satisfies higher-order dominance criteria relative to a benchmark asset.\nDetermine the optimal allocation – Find the asset allocation that maximizes a chosen objective (e.g., maximizing returns) while adhering to stochastic dominance constraints. It supports two key objective functions: maximizing expected returns and minimizing higher-order risk measures.  ","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package StochasticDominance.jl can be installed in Julia REPL as follows:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"StochasticDominance\")\nusing StochasticDominance","category":"page"},{"location":"","page":"Home","title":"Home","text":"Once you have installed StochasticDominance.jl, we recommend going through the tutorials from beginning to end to understand how to use the package to verify stochastic dominance and determine the optimal allocation between a benchmark asset and a portfolio.","category":"page"},{"location":"#Important-functions-in-the-package","page":"Home","title":"Important functions in the package","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The StochasticDominance.jl package provides several important functions, which are explained in detail in the tutorials section. Here, we provide a brief overview of the functions.","category":"page"},{"location":"","page":"Home","title":"Home","text":"verify_dominance: This function checks whether the given benchmark asset, represented as the random variable X, and the weighted portfolio asset, represented as the random variable Y, exhibit a dominance relationship for the specified stochastic order. This means that Y consistently yields preferable outcomes over X in the specified stochastic order. \noptimize_max_return_SD: This function determines the optimal asset allocation that maximizes expected returns for a given stochastic order (SDorder). Additionally, using optimize_max_return_SD(; plots=true), users can generate a pie chart displaying the optimal allocation in percentages, along with the maximized expected returns and benchmark returns. The function also includes the option optimize_max_return_SD(; verbose=true),  which allows users to imprint the convergence (or dominance) of the numerical method.\noptimize_min_riskreturn_SD: This function determines the optimal asset allocation by minimizing higher-order risk measures for a given stochastic order (SDorder) while also indicating whether dominance is achieved. Additionally, using optimize_min_riskreturn_SD(; plots=true), users can generate a pie chart that visualizes the optimal allocation in percentages, along with the minimizing higher-order risk measure returns. The function also provides the option optimize_min_riskreturn_SD(; verbose=true), allowing users to assess the convergence (or dominance) of the numerical algorithm.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Contribute: Submit pull requests to improve features or fix bugs.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Report Issues: Use the Issues tab to flag bugs, errors, or unexpected behavior.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Support: For questions or help, open a discussion or create an issue.","category":"page"},{"location":"tutorial/tutorial2/#Higher-Order-Stochastic-Dominance-Verification","page":"Higher Order Stochastic Dominance Verification","title":"Higher Order Stochastic Dominance Verification","text":"","category":"section"},{"location":"tutorial/tutorial2/","page":"Higher Order Stochastic Dominance Verification","title":"Higher Order Stochastic Dominance Verification","text":"This tutorial demonstrates the function verify_dominance, which validates the dominance relationship between Y and X.","category":"page"},{"location":"tutorial/tutorial2/#Example-1","page":"Higher Order Stochastic Dominance Verification","title":"Example 1","text":"","category":"section"},{"location":"tutorial/tutorial2/","page":"Higher Order Stochastic Dominance Verification","title":"Higher Order Stochastic Dominance Verification","text":"To verify if Y stochastically dominates X under the specified order SDorder = 2, we use the function verify_dominance","category":"page"},{"location":"tutorial/tutorial2/#Defining-Random-Variables-X-and-Y","page":"Higher Order Stochastic Dominance Verification","title":"Defining Random Variables X and Y","text":"","category":"section"},{"location":"tutorial/tutorial2/","page":"Higher Order Stochastic Dominance Verification","title":"Higher Order Stochastic Dominance Verification","text":"Consider two discrete random variables, X and Y. Their values and associated probabilities are:","category":"page"},{"location":"tutorial/tutorial2/","page":"Higher Order Stochastic Dominance Verification","title":"Higher Order Stochastic Dominance Verification","text":"Y = 3 5 7\nwith probabilities p_Y = 03 04 03.\nX = 2 4 6\nwith probabilities p_X = 02 05 03.","category":"page"},{"location":"tutorial/tutorial2/","page":"Higher Order Stochastic Dominance Verification","title":"Higher Order Stochastic Dominance Verification","text":"These represent two probability distributions that we compare using stochastic dominance.","category":"page"},{"location":"tutorial/tutorial2/","page":"Higher Order Stochastic Dominance Verification","title":"Higher Order Stochastic Dominance Verification","text":"Y = [3, 5, 7]\nX = [2, 4, 6]\np_Y = [0.3, 0.4, 0.3]\np_X = [0.2, 0.5, 0.3]\nSDorder = 2\nverify_dominance(Y, X,SDorder;p_Y, p_X)\n","category":"page"},{"location":"tutorial/tutorial2/","page":"Higher Order Stochastic Dominance Verification","title":"Higher Order Stochastic Dominance Verification","text":"Output:","category":"page"},{"location":"tutorial/tutorial2/","page":"Higher Order Stochastic Dominance Verification","title":"Higher Order Stochastic Dominance Verification","text":"Y dominates X in stochastic order 2\ntrue","category":"page"},{"location":"tutorial/tutorial2/","page":"Higher Order Stochastic Dominance Verification","title":"Higher Order Stochastic Dominance Verification","text":"This function checks whether Y stochastically dominates X of order SDorder. The verbose=true option ensures detailed output, providing insights into the dominance verification process.","category":"page"},{"location":"tutorial/tutorial2/#Example-2","page":"Higher Order Stochastic Dominance Verification","title":"Example 2","text":"","category":"section"},{"location":"tutorial/tutorial2/","page":"Higher Order Stochastic Dominance Verification","title":"Higher Order Stochastic Dominance Verification","text":"Consider two discrete random variables, X and Y, with swapped roles. Their values and associated probabilities are:","category":"page"},{"location":"tutorial/tutorial2/","page":"Higher Order Stochastic Dominance Verification","title":"Higher Order Stochastic Dominance Verification","text":"X = 3 5 7\nwith probabilities p_X = 03 04 03.\nY = 2 4 6\nwith probabilities p_Y = 02 05 03.","category":"page"},{"location":"tutorial/tutorial2/","page":"Higher Order Stochastic Dominance Verification","title":"Higher Order Stochastic Dominance Verification","text":"These represent two probability distributions that we compare using stochastic dominance.","category":"page"},{"location":"tutorial/tutorial2/","page":"Higher Order Stochastic Dominance Verification","title":"Higher Order Stochastic Dominance Verification","text":"X = [3, 5, 7]\nY = [2, 4, 6]\np_X = [0.3, 0.4, 0.3]\np_Y = [0.2, 0.5, 0.3]\nSDorder = 2\nverify_dominance(Y,X,SDorder;p_Y,p_X,verbose=true)","category":"page"},{"location":"tutorial/tutorial2/","page":"Higher Order Stochastic Dominance Verification","title":"Higher Order Stochastic Dominance Verification","text":"Output:","category":"page"},{"location":"tutorial/tutorial2/","page":"Higher Order Stochastic Dominance Verification","title":"Higher Order Stochastic Dominance Verification","text":"Y doesn't dominates X in stochastic order 2\nY doesn't dominates X in stochastic order 2 with residual 1.6970562748477143\nfalse","category":"page"},{"location":"tutorial/tutorial2/","page":"Higher Order Stochastic Dominance Verification","title":"Higher Order Stochastic Dominance Verification","text":"The verbose output indicates that with a residual value of 1.70, we can confirm that Y does not dominate X in the second-order stochastic dominance. However, in general, the user has control over the choice of residual (ε), and it can be selected as needed.","category":"page"}]
}
